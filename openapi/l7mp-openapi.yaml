openapi: 3.0.0

info:
  version: 1.0.0
  title: L7mp control plane API
  description: A programming interface for controlling L7mp

servers:
  - url: '/io.l7mp.api.v1'

components:
  schemas:
    io.l7mp.api.v1.Config:
      description: Full L7mp static and runtime configuration
      type: object
      properties:
        admin:
          $ref: '#/components/schemas/io.l7mp.api.v1.Admin'
        listeners:
          description: A list of Listener objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
        clusters:
          description: A list of Cluster objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        sessions:
          description: A list of Session objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Session'
      required:
        - admin
        - listeners
        - clusters

    io.l7mp.api.v1.AdminRequest:
      description: 'Wrapper for addAdmin calls: contains only a single Admin object.'
      type: object
      required:
        - admin
      properties:
        admin:
          $ref: '#/components/schemas/io.l7mp.api.v1.Admin'

    io.l7mp.api.v1.Admin:
      description: Static configuration
      type: object
      properties:
        log_level:
          type: string
          description: Log verbosity, one of, from the most talkative, "silly", "verbose", "info", "notice", "warn", "error", and "silent" (not recommended). Default is "info".
        log_file:
          type: string
          description: File to write log messages to. Default is "stderr".
        access_log_path:
          type: string
          description: Access log (currently unimplemented).
        strict:
          type: boolean
          description: 'Enable strict mode: validates all REST API calls against OpenAPI schema (default: false).'

    io.l7mp.api.v1.ListenerRequest:
      description: 'Wrapper for addListener calls: contains only a single Listener object'
      type: object
      required:
        - listener
      properties:
        listener:
          $ref: '#/components/schemas/io.l7mp.api.v1.Listener'

    io.l7mp.api.v1.Listener:
      description: A socket that listens for incoming connection requests, an abstraction for an "ingress port".
      type: object
      required:
        - name
        - spec
        - rules
      properties:
        name:
          description: Name (required).
          type: string
        spec:
          description: Listener specification (required).
          type: object
          oneOf:
            - $ref: '#/components/schemas/io.l7mp.api.v1.HTTPListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketListenerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UDPSingletonListenerSpec'
          discriminator:
            propertyName: protocol
            mapping:
              HTTP: '#/components/schemas/io.l7mp.api.v1.HTTPListenerSpec'
              WebSocket: '#/components/schemas/io.l7mp.api.v1.WebSocketListenerSpec'
              UDP: '#/components/schemas/io.l7mp.api.v1.UDPSingletonListenerSpec'
        rules:
          description: A list of Rule objects (required).
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Rule'

    io.l7mp.api.v1.HTTPListenerSpec:
      description: |
        A HTTP server specification that accepts HTTP requests at a specified port.
        - protocol: HTTP
        - session ID: IP 5-tuple
        - type: session
        - mode: server
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - HTTP
          description: The protocol, must be "HTTP".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        path:
          type: string
          description: HTTP URL to serve.

    io.l7mp.api.v1.WebSocketListenerSpec:
      description: |
        A WebSocket server specification that accepts HTTP/WebSocket requests at a specified port.
        - protocol: WebSocket
        - session ID: IP 5-tuple
        - type: datagram
        - mode: server
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - WebSocket
          description: The protocol, must be "WebSocket".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        path:
          type: string
          description: HTTP URL for to serve.

    io.l7mp.api.v1.UDPSingletonListenerSpec:
      description: |
        A connected UDP listener that accepts UDP datagrams from a specified remote address-port pair. In connected mode, waits for the first packet from the specified remote IP/port pair and connects back. In unconnected mode (connect field not specified), waits for the first packet and uses the source IP/port in that packet as remote to which it connects back. In any case, subsequent packets will be accepted only from the same remote.
        - protocol: UDP
        - session ID: IP 5-tuple
        - type: datagram
        - mode: singleton
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          description: The protocol, must be "UDP".
          type: string
          enum:  # fixed value
            - UDP
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        connect:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.AddressPortPair'

    io.l7mp.api.v1.ClusterRequest:
      description: 'Wrapper for addCluster calls: contains only a single Cluster object.'
      type: object
      required:
        - cluster
      properties:
        cluster:
          $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'

    io.l7mp.api.v1.Cluster:
      description: A socket that originates connections to external services, an abstraction for an "egress port".
      type: object
      required:
        - name
        - spec
      properties:
        name:
          type: string
        spec:
          type: object
          oneOf:
            - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.UDPSingletonClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.L7mpControllerSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.StdioClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.EchoClusterSpec'
            - $ref: '#/components/schemas/io.l7mp.api.v1.LoggerClusterSpec'
          discriminator:
            propertyName: protocol
            mapping:
              WebSocket: '#/components/schemas/io.l7mp.api.v1.WebSocketClusterSpec'
              UDP: '#/components/schemas/io.l7mp.api.v1.UDPSingletonClusterSpec'
              L7mpController: '#/components/schemas/io.l7mp.api.v1.L7mpControllerSpec'
              Stdio: '#/components/schemas/io.l7mp.api.v1.StdioClusterSpec'
              Echo: '#/components/schemas/io.l7mp.api.v1.EchoClusterSpec'
              Logger: '#/components/schemas/io.l7mp.api.v1.LoggerClusterSpec'
        endpoints:
          description: A list of EndPoint objects.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.EndPoint'

    io.l7mp.api.v1.WebSocketClusterSpec:
      description: A WebSocket cluster specification that forwards HTTP/WebSocket connections to an upstream cluster.
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          type: string
          enum:  # fixed value
            - WebSocket
          description: The protocol, must be "WebSocket".
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'

    io.l7mp.api.v1.UDPSingletonClusterSpec:
      description: A UDP sender socket that forwards UDP connections to an upstream cluster, connecting to a well-defined remote address-port pair.
      type: object
      required:
        - protocol
        - port
      properties:
        protocol:
          description: The protocol, must be "UDP".
          type: string
          enum:  # fixed value
            - UDP
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'
        bind:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.AddressPortPair'

    io.l7mp.api.v1.L7mpControllerSpec:
      description: A virtual cluster that accepts L7mp controller REST API calls.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "L7mpController".
          type: string
          enum:  # fixed value
            - L7mpController

    io.l7mp.api.v1.StdioClusterSpec:
      description: A virtual cluster that writes the stream routed to it to the proxy standard output and pipes back standard input into the stream. Useful for debugging.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Stdio".
          type: string
          enum:  # fixed value
            - Stdio

    io.l7mp.api.v1.EchoClusterSpec:
      description: A virtual cluster that echoes back everything it receives.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Echo".
          type: string
          enum:  # fixed value
            - Echo

    io.l7mp.api.v1.LoggerClusterSpec:
      description: A virtual cluster that logs everything that passes through it to a log file.
      type: object
      required:
        - protocol
      properties:
        protocol:
          description: The protocol, must be "Logger".
          type: string
          enum:  # fixed value
            - Logger
        log_file:
          description: The file to log to. Opened it mode "w" (create or truncate if exists). Default is '-' (stdout).
          type: string
        log_prefix:
          description: Prefix log messages. Default is no prefix.
          type: string

    io.l7mp.api.v1.Session:
      description: A socket that originates connections to external services, an abstraction for an "egress port".
      type: object

    io.l7mp.api.v1.EndPoint:
      description: A particular upstream backend that accepts connects through a Cluster.
      type: object
      required:
        - spec
      properties:
        name:
          description: Name (optional, a unique endpoint name will be assigned automatically if not specified.)
          type: string
        spec:
          $ref: '#/components/schemas/io.l7mp.api.v1.EndPointSpec'

          # oneOf:
          #   - $ref: '#/components/schemas/io.l7mp.api.v1.WebSocketEndPointSpec'
          #   - $ref: '#/components/schemas/io.l7mp.api.v1.UDPSingletonEndPointSpec'

    # TODO: specialize for different endpoint types
    io.l7mp.api.v1.EndPointSpec:
      description: A generic endpoint specification.
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'

    # io.l7mp.api.v1.WebSocketEndPointSpec:
    #   description: A WebSocket endpoint specification.
    #   type: object
    #   required:
    #     - address
    #   properties:
    #     address:
    #       $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'

    # io.l7mp.api.v1.UDPSingletonEndPointSpec:
    #   description: A UDP endpoint specification.
    #   type: object
    #   required:
    #     - address
    #   properties:
    #     address:
    #       $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'

    io.l7mp.api.v1.Route:
      description: The route to be assigned to a session in a math-action rule.
      type: object
      required:
        - cluster
      properties:
        cluster:
          description: The "destination" cluster of the route (required).
          type: string
        ingress:
          description: The set of transforms to be applied in the "ingress" (upstream, from the listener to the cluster) direction (optional).
          type: array
          items:
            description: A transformer cluster.
            type: string
        egress:
          description: The set of transforms to be applied in the "eress" (downstream, from the cluster to the listener) direction (optional).
          type: array
          items:
            description: A transformer cluster.
            type: string

    # io.l7mp.api.v1.Match:
    #   description: The "filter" part of a math-action rule that filters on session metadata.
    #   type: object
    #   oneOf:
    #     - $ref: '#/components/schemas/io.l7mp.api.v1.WildcardMatch'
    #     - $ref: '#/components/schemas/io.l7mp.api.v1.JSONPredicate'

    # io.l7mp.api.v1.WildcardMatch:
    #   description: A wildcard filter, matches everything.
    #   type: string

    io.l7mp.api.v1.JSONPredicate:
      description: A complex filter specified as a JSON predicate, see https://tools.ietf.org/html/draft-snell-json-test-07
      type: object

    io.l7mp.api.v1.Rewrite:
      description: Metadata rewrite rule. Find or create metadata at the specified path and set it to the specified value.
      type: object
      required:
        - path
        - value
      properties:
        path:
          description: The JSON path to the metadata field to rewrite. Will be created if path does not exist.
          type: string
        value:
          description: The value to rewrite the metadata field at the specified path. Can be a simple string or a JSON/YAML snippet.

    io.l7mp.api.v1.Action:
      description: The "action" part of a math-action rule that assigns a route to the matched sessions.
      type: object
      required:
        - route
      properties:
        rewrite:
          description: A list of rewrite rules.
          type: array
          items:
            $ref: '#/components/schemas/io.l7mp.api.v1.Rewrite'
        route:
          $ref: '#/components/schemas/io.l7mp.api.v1.Route'

    io.l7mp.api.v1.Rule:
      description: A math-action rule that defines the route of a connection through the L7mp pipeline. May contain a match and an action. If no match is specified, a wildcard match is automatically installed.
      type: object
      required:
        - action
      properties:
        name:
          description: Name (optional).
          type: string
        match:
          # $ref: '#/components/schemas/io.l7mp.api.v1.Match'
          $ref: '#/components/schemas/io.l7mp.api.v1.JSONPredicate'
        action:
          $ref: '#/components/schemas/io.l7mp.api.v1.Action'

    io.l7mp.api.v1.Status:
      description: General status info.
      type: object
      required:
        - message
      properties:
        message:
          description: Message.
          type: string
        error:
          description: Error (optional).

    io.l7mp.api.v1.Parameter.Address:
      description: A network layer (IP/IPv6) address or domain name.
      type: string

    io.l7mp.api.v1.Parameter.Port:
      description: The valid transport protocol port.
      type: integer
      minimum: 1
      maximum: 65535

    io.l7mp.api.v1.Parameter.AddressPortPair:
      description: A pair of a network layer (IP/IPv6) address/domain name and a transport layer port.
      type: object
      required:
        - address
        - port
      properties:
        address:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Address'
        port:
          $ref: '#/components/schemas/io.l7mp.api.v1.Parameter.Port'

paths:
  # Full config API
  /api/v1/config:
    get:
      description: Get the full configuration
      operationId: getConf
      responses:
        '200':
          description: Full configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Config'
    post:
      description: Reload configuration.
      operationId: setConf
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.Config'
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Static config API
  /api/v1/admin:
    get:
      description: Get the static configuration
      operationId: getAdmin
      responses:
        '200':
          description: Static configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Admin'
    post:
      description: Apply static configuration
      operationId: applyAdmin
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.AdminRequest'
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Listener API
  /api/v1/listeners:
    get:
      description: Get a list of Listener objects
      operationId: getListeners
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Listener objects.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
    post:
      description: Create a Listener
      operationId: addListener
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.ListenerRequest'
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  /api/v1/listeners/{name}:
    get:
      description: Get a named Listener object
      operationId: getListener
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Listener'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Listener object
      operationId: deleteListener
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Cluster API
  /api/v1/clusters:
    get:
      description: Get a list of Cluster objects
      operationId: getClusters
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Cluster objects.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
    post:
      description: Create a Cluster
      operationId: addCluster
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/io.l7mp.api.v1.ClusterRequest'
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  /api/v1/clusters/{name}:
    get:
      description: Get a named Cluster object
      operationId: getCluster
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Cluster'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Cluster object
      operationId: deleteCluster
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
  # Session API
  /api/v1/sessions:
    get:
      description: Get a list of Session objects
      operationId: getSessions
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                description: A list of Session objects.
                type: array
                items:
                  $ref: '#/components/schemas/io.l7mp.api.v1.Session'
  /api/v1/sessions/{name}:
    get:
      description: Get a named Session object
      operationId: getSession
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Session'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
    delete:
      description: Delete a named Session object
      operationId: deleteSession
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'
        '400':
          description: Invalid configuration
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/io.l7mp.api.v1.Status'

* Importance: superhigh

** TODO UDP server
** TODO RTP support: listener in server mode + cluster (modules later)
** TODO Felician: bug reportok
** DONE API validation: switch on
** TODO ConsistentHash loadbalancer (https://www.npmjs.com/package/hashring)
** TODO Weighted loadbalancer
** TODO access_log

* Importance: high

** TODO Add timestamps to log messages
** TODO Make sure binary mode works well (iperf should work through L7mp just fine)
** TODO UDP: return into "connect" mode (waiting for packet) after stream is destroyed
** TODO sanitize debug output (currently L7mp is too chatty even at info level)
** TODO session setup retries, auto-reconnect (also expose retry objects through the API)
** TODO Timeout module
** TODO stream statistics
** TODO expose statistics to Prometheus (implement the prometheus_listener)
** TODO expose statistics to rule-matching (this would allow simple qos/rate-limiting)
** TODO health-check: kubelet should be able to detect if L7mp is running
** TODO L7mp: die on detecting unhandled promises

* Importance: minor

** TODO JSON schema validation for JSONPredicate rules
** TODO expose the L7mp REST API doc from L7mp itself on a dedicated HTTP listener

* Test

** DONE connection/stream disconnect (losing a WebSocket stream along a chain should disconnect the session)
** TODO stream segmentation correctness (do datagram streams correctly maintain message boundaries? do we always correctly set objectomode?)
** TODO verify each dependency for streams3 support
** TODO unit tests

* Importance: DONE

** DONE implement rule matching using the standard JSON query language
** DONE documentation + github
** DONE implement OpenAPI definitions for the REST API
** DONE implement auto-generated API request routing in L7mpController
** DONE implement stream debugging (Logger, Echo)
** DONE sync cluster (allow sessions to sync at a cluster)
** DONE metadata set/rewrite + expose via OpenAPI
** DONE UDPSingleton: connected (connect back to the source of the first packet it source IP/port match the given) and unconnected mode (connect back to whatever source that sends a packet)

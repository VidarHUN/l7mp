* Doc

** TODO Landing page finalize
** TODO OpenAPI docs: Streamline descriptions and add examples maybe

* Importance: critical

** TODO Git version in startup message
** TODO Admin API: getAdmin error
** TODO socket.close try/catch
** TODO UDP/singleton: reemit stream if retry policy requires so, otherwise remove listener all together
** TODO UDP/server: Implement TIME_WAIT semantics: after close, keep on replying with 'ICMP Port Unreachable' within a timeout to packets coming from the same IP/port
** TODO Fix error when JSONSocket client timeout does not initiate a reconnect

* Importance: high

** TODO UDP inactivity timeout should be settable and exceeding the timeout should kill session
** TODO sanitize debug output (currently L7mp is too chatty even at info level)
** TODO Timeout module
** TODO stream statistics
** TODO expose statistics to Prometheus (implement the prometheus_listener)
** TODO expose statistics to rule-matching (this would allow simple qos/rate-limiting)
** TODO health-check: kubelet should be able to detect if L7mp is running

* Importance: wishlist

** TODO checkRoute
** TODO Loadbalancer: Weighted/RoundRobin
** TODO Generic parser/deparser support in Listeners/Clusters
** TODO access_log
** TODO JSON schema validation for JSONPredicate rules
** TODO expose the L7mp REST API doc from L7mp itself on a dedicated HTTP listener

* Test

** TODO stream segmentation correctness (do datagram streams correctly maintain message boundaries? do we always correctly set objectomode?)
** TODO verify each dependency for streams3 support
** TODO unit tests

* Importance: DONE

** DONE deleteCluster() should be automatically recursive (should delete endpoints)
** DONE Recursive delete
** DONE Bring toJSON() before response validation
** DONE Convert README.org to markdown
** DONE Handle named RuleList references in Listener and Route objects
** DONE RuleList API: add/delete rulelists
** DONE Defer resolving named references (to clusters, routes, etc.) to runtime
** DONE Endpoint API: addEndpoint(cluster, new endpoint, optional name), deleteEndPoint(name)
** DONE API validation: switch back!
** DONE Add timestamps to log messages
** DONE Make sure binary mode works well (iperf should work through L7mp just fine)
** DONE UDP: return into "connect" mode (waiting for packet) after stream is destroyed
** DONE session setup retries, auto-reconnect (also expose retry objects through the API)
** DONE L7mp: die on detecting unhandled promises
** DONE connection/stream disconnect (losing a WebSocket stream along a chain should disconnect the session)
** DONE ConsistentHash loadbalancer (https://www.npmjs.com/package/hashring)
** DONE UDP server
** DONE l7mp versioning: get version info from git node.js
** DONE implement rule matching using the standard JSON query language
** DONE documentation + github
** DONE implement OpenAPI definitions for the REST API
** DONE implement auto-generated API request routing in L7mpController
** DONE implement stream debugging (Logger, Echo)
** DONE sync cluster (allow sessions to sync at a cluster)
** DONE metadata set/rewrite + expose via OpenAPI
** DONE UDPSingleton: connected (connect back to the source of the first packet it source IP/port match the given) and unconnected mode (connect back to whatever source that sends a packet)
